<%- include('../layout/headerAdmin') %>
  <%- include('../layout/sidebarAdmin') %>

    <div class="col py-3">

      <div class="download-sales-report">
        <a onclick="downloadInvoice()"><input type="button" class="btn btn-success" value="Download Sales Report"></a>
        <!-- <a onclick="downloadExcel()"><input type="button" class="btn btn-success" value="Download Excel"></a>
             -->
        <section class="back-to-orders"><a href="/admin/dash-board"><button class="btn btn-primary ">Back to
              Dashboard</button></a></section>
      </div>
      <div id="orderContainer">
        <center>
          <h2 class="sales-report-heading">SALES REPORT</h2>
        </center>

        <h4 class="overView_heading">OVER VIEW</h4>
        <div class="sales-overview-container">
          <div class="overview-det">
            <h6>Total Revenue</h6>
            <h6>₹<%= formatPrice(totalOrderPrice) %>
            </h6>
          </div>
          <div class="overview-det">
            <h6>Average Order Value </h6>
            <h6>₹<%= formatPrice(averageOrderValue)%>
            </h6>
          </div>
          <div class="overview-det">
            <h6>Total orders </h6>
            <h6>
              <%= totalOrders %>
            </h6>
          </div>
        </div>

        <div class="sales-heading">
          <h4 class="graph-heading">
            <%= timeRange %> sales
          </h4>

          <div class="selectGraphButton">
            <a class="btn btn-primary" href="/admin/sales-report?timeRange=monthly"
              class="<%= timeRange === 'monthly' ? 'selected' : '' %>">Monthly</a>
            <a class="btn btn-primary" href="/admin/sales-report?timeRange=weekly"
              class="<%= timeRange === 'weekly' ? 'selected' : '' %>">Weekly</a>
            <a class="btn btn-primary" href="/admin/sales-report?timeRange=yearly"
              class="<%= timeRange === 'yearly' ? 'selected' : '' %>">Yearly</a>
          </div>

        </div>

        <input type="text" name="timeRange" id="timeRange" value="<%= timeRange %>" hidden>



        <div id="chartContainer">
          <canvas id="monthlyTotalChart" width="100" height="40"></canvas>
        </div>


        <div class="top-products">
          <h4 class="product-head">TOP CUSTOMERS</h4>

          <div class="row my-4">
            <div class="col-lg-12">
              <div class="table-responsive">
                <% if (locals.userDetails) { %>
                  <table class="table table-bordered table-hover text-center">
                    <thead class="table-success">
                      <tr class="table-dark">
                        <th>Customer Name </th>
                        <th>Customer ID</th>
                        <th>Contact Number</th>
                        <th>Email</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% userDetails.forEach((user,index)=> { %>
                        <tr class="align-middle mt-5">
                          <td>
                            <%= user.name %>
                          </td>
                          <td>
                            <%= user._id %>
                          </td>

                          <td>
                            <%= user.contactNumber %>
                          </td>
                          <td>
                            <%= user.email %>
                          </td>
                        </tr>
                        <% }) %>
                    </tbody>
                  </table>
                  <% } %>
              </div>
            </div>
          </div>
        </div>

        <div class="top-products">
          <h4 class="product-head">TOP PRODUCTS</h4>

          <div class="row my-4">
            <div class="col-lg-12">
              <div class="table-responsive">
                <% if (locals.products) { %>
                  <table class="table table-bordered table-hover text-center">
                    <thead class="table-success">
                      <tr class="table-dark">
                        <th>Image </th>
                        <th>Product</th>
                        <th>Brand</th>
                        <th>Price</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% products.forEach((product,index)=> { %>
                        <tr class="align-middle mt-5">
                          <td>
                            <img style="height: 40px;width: 100px;"
                              src="http://localhost:5000/<%= product.imageUrl[0] %>" alt="Bike image">
                          </td>
                          <td>
                            <%= product.product_name %>
                          </td>
                          <td>
                            <%= product.brand %>
                          </td>
                          <td>
                            ₹<%= product.price %>
                          </td>
                          <td>
                            <%= product.description.slice(0,50) %>
                          </td>
                        </tr>
                        <% }) %>
                    </tbody>
                  </table>
                  <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>



      <%- include('../layout/footerUser') %>


        <script>
          const totalsData = <% - JSON.stringify(totalsData) %>;

          var timeRange = document.getElementById('timeRange').value;
          var labels = [];
          var data = [];
          var filteredData = [];
          if (timeRange == 'monthly') {

            const monthNames = [
              'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'
            ];

            const allMonths = Array.from({ length: 12 }, (_, i) => i + 1);
            const availableMonths = totalsData.map(entry => entry.month);

            filteredData = totalsData.filter(entry => availableMonths.includes(entry.month));

            labels = allMonths.map(month => `${monthNames[month - 1]}`);
            data = Array.from({ length: 12 }, (_, i) => {
              const matchingEntry = filteredData.find(entry => entry.month === i + 1);
              return matchingEntry ? matchingEntry.totalOrderPrice : 0;
            });

          } else if (timeRange == 'weekly') {


            const weekNumbers = Array.from({ length: 53 }, (_, i) => i + 1);

            const availableWeeks = totalsData.map(entry => entry.week);

            filteredData = totalsData.filter(entry => availableWeeks.includes(entry.week));

            labels = weekNumbers.map(week => `Week ${week}`);
            data = weekNumbers.map(week => {
              const matchingEntry = filteredData.find(entry => entry.week === week);
              return matchingEntry ? matchingEntry.totalOrderPrice : 0;
            });

          } else if (timeRange == 'yearly') {
            const availableYears = totalsData.map(entry => entry.year);

            filteredData = totalsData.filter(entry => availableYears.includes(entry.year));

            labels = availableYears.map(year => `Year ${year}`);
            data = availableYears.map(year => {
              const matchingEntry = filteredData.find(entry => entry.year === year);
              return matchingEntry ? matchingEntry.totalOrderPrice : 0;
            });
          }

          const ctx = document.getElementById('monthlyTotalChart').getContext('2d');
          new Chart(ctx, {
            type: 'bar',
            data: {
              labels: labels,
              datasets: [{
                label: 'Total Sales', // Ensure that the label is included in the datasets array
                data: data,
                backgroundColor: 'rgba(94, 162, 252, 0.8)', // Adjusted color
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2
              }]
            },
            options: {
              scales: {
                x: {
                  type: 'category',
                  title: {
                    display: true,
                    text: 'Month',
                    font: {
                      size: 16,
                      weight: 'bold'
                    }
                  },
                  ticks: {
                    font: {
                      size: 14
                    }
                  },
                  grid: {
                    display: false
                  }
                },
                y: {
                  title: {
                    display: true,
                    text: 'Total Sales',
                    font: {
                      size: 16,
                      weight: 'bold'
                    }
                  },
                  ticks: {
                    font: {
                      size: 14
                    },
                    beginAtZero: true
                  },
                  grid: {
                    display: false
                  }
                }
              },
              plugins: {
                legend: {
                  display: true, // Ensure that the legend is displayed
                  labels: {
                    font: {
                      size: 14
                    }
                  }
                },
                title: {
                  display: true,
                  text: `Year: ${filteredData[0]?.year}`,
                  align: 'end',
                  position: 'top',
                  font: {
                    size: 18,
                    weight: 'bold'
                  }
                },
              },
              layout: {
                padding: {
                  right: 30,
                }
              },
              scales: {
                x: {
                  maxTicksLimit: 12,
                }
              }
            }
          });
        </script>



        <script src="https://rawgit.com/eKoopmans/html2pdf/master/dist/html2pdf.bundle.js"></script>

        <script>
          function downloadInvoice() {
            const orderContainer = document.getElementById('orderContainer');
            html2pdf(orderContainer, {
              margin: 10,
              filename: 'sales_report.pdf',
              image: { type: 'jpeg', quality: 0.98 },
              html2canvas: { scale: 2 },
              jsPDF: { unit: 'mm', format: 'a4', orientation: 'landscape' }
            })
          }
        </script>

        <script>
          function downloadExcel() {
            console.log("Download button clicked!");
            // Assuming products is an array of objects with the data you want to export
            const products = <%= JSON.stringify(products) %>;

            // Convert the data to a worksheet
            const ws = XLSX.utils.json_to_sheet(products);

            // Create a workbook
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ws, "Products");

            // Save the workbook
            XLSX.writeFile(wb, "products.xlsx");
          }
        </script>





    </div>
    </div>
    </div>