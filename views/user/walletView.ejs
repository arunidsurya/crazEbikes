<!-- views/walletView.ejs -->

<%- include('../layout/headerUser') %>
    <%- include('../layout/formatPrice') %>

        <main class="manage-wallet-main-container">
            <div class="manage-wallet-container">
                <header class="header-wallet">
                    <h3>Your Wallet</h3>
                </header>

                <div class="wallet-content">
                    <h4>Available Balance:</h4>
                    <h4>â‚¹<%= formatPrice(wallet.amount) %>
                    </h4>
                </div>
                <div class="wallet-pay-btn">
                    <input type="button" class="btn btn-success mb-4" id="" value="Wallet Pay" onclick="payToWalletClick()">
                </div>
                <div class="wallet-pay-form" id="wallet-pay-form">
                    <label for="amount">Enter amount:</label>
                    <input type="text" name="amount" id="walletPayAmount">
                    <input type="button" class="btn btn-primary" onclick="payToWallet(event)" value="Pay">
                </div>
                <% if (wallet.transactions.length> 0) { %>

                    <h4 class="mt-4">Transactions</h4>
                    <table class="table table-borderd table-responsive" id="myTable">
                        <thead>
                            <tr class="table-success ">
                                <th>Invoice Number</th>
                                <th>Date</th>
                                <th>Description</th>
                                <th>Amount</th>
                                <th>Credit/Debit</th>
                            </tr>
                        </thead>

                        <tbody class="table-body">
                            <% wallet.transactions.forEach(transaction=> { %>
                                <tr>
                                    <td>
                                        <%= transaction.source %>
                                    </td>
                                    <td>
                                        <%= new Date(transaction.date).toLocaleString() %>
                                    </td>
                                    <td>
                                        <%= transaction.description %>
                                    </td>
                                    <td>
                                        <%= formatPrice(transaction.transaction_amount) %>
                                    </td>
                                    <% if (transaction.method==='credit' ) { %>
                                        <td style="color: green;">+<%= transaction.method %>
                                        </td>
                                        <% } else { %>
                                            <td style="color: red;">-<%= transaction.method %>
                                            </td>
                                            <% } %>
                                </tr>
                                <% }) %>
                        </tbody>

                    </table>

                    <% } %>

            </div>
        </main>

        <%- include('../layout/footerUser') %>


         <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
         <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>



            <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
            <script>
                $(document).ready(function () {
                    $('#myTable').DataTable({
                        "columnDefs": [
                            {
                                "targets": 1, // index of the 'Date' column
                                "render": function (data, type, row) {
                                    // Format the date using moment.js
                                    return moment(data).format('DD-MMM-YYYY');
                                }
                            }
                        ],
                        "order": [[1, "asc"]]
                    });
                });
            </script>
                                                

            <script>
                function payToWalletClick() {
                    const walletPayInput=document.getElementById('wallet-pay-form');
                    const walletPayBtn = document.getElementById('wallet-pay-btn');
                    walletPayInput.style.display='block';
                    walletPayBtn.style.display='none';
                }

                function payToWallet(event) {
                    event.preventDefault();
                    const walletPayInput=document.getElementById('wallet-pay-form');
                    const walletPayBtn = document.getElementById('wallet-pay-btn');
                    const amount = document.getElementById('walletPayAmount').value;

                    fetch('/user/wallet-pay', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ amount }),
                    })
                        .then(response => 


                                response.json()
                            
                            

                        ) // Parse the JSON response
                        .then(data => {
                            const order = data.order;
                            const KEY_ID = data.KEY_ID;
                            // console.log(KEY_ID);
                            // console.log(order); // Access the 'order' property from the response
                            razorpayPayment(order, KEY_ID);

                        })
                }

                function razorpayPayment(order, KEY_ID) {

                    var options = {
                        "key": KEY_ID,
                        "amount": order.amount,
                        "currency": "INR",
                        "name": "crazEbikes",
                        "description": "Test Transaction",
                        "image": "https://example.com/your_logo",
                        "order_id": order.id,
                        "handler": function (response) {
                            // alert(response.razorpay_payment_id);
                            // alert(response.razorpay_order_id);
                            // alert(response.razorpay_signature);

                            // Call verifyPayment with the response and order
                            verifyPayment(response, order);
                        },
                        "prefill": {
                            "name": "Gaurav Kumar",
                            "email": "gaurav.kumar@example.com",
                            "contact": "9000090000"
                        },
                        "notes": {
                            "address": "Razorpay Corporate Office"
                        },
                        "theme": {
                            "color": "#3399cc"
                        }
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.open();

                }

                function verifyPayment(response, order) {
                    fetch('/user/verify-wallet-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ order, response }),
                    })
                        .then(response => {
                            if (response.ok) {
                                window.location.href = '/user/wallet';
                            } else {
                                console.log("response not ok")
                            }
                        })
                }


            </script>