<%- include('layout/headerAdmin') %>

  <%- include('layout/sidebarAdmin') %>



    <div class="col py-3">
      <h4>Add Product</h4>
      <% if (locals.message) { %>
        <h7 style="color: red;">
          <%= message %>
        </h7>
        <% } %>
          <form action="/admin/addProduct" method="post" enctype="multipart/form-data">
            <div class="form-group row">
            </div>
            <div class="form-group row">
              <label for="product_name" class="col-sm-2 col-form-label">Product Name:</label>
              <div class="col-sm-10">
                <input type="text" name="product_name" class="form-control" id="category_name">
                <% if (locals.errors && locals.errors.product_name) { %>
                  <span class="text-danger" id="errors-product_name">
                    <%= errors.product_name.msg %>
                  </span>
                  <% } %>
              </div>
              <label for="category_description" class="col-sm-2 col-form-label">Select category:</label>
              <div class="col-sm-10">
                <select name="categoryId" id="categoryId" class="form-control">
                  <option value="">Select Category</option>
                  <% for(let category of categories) {%>
                    <option value="<%= category.id %>">
                      <%= category.category_name %>
                    </option>
                    <%} %>
                </select>
                <% if (locals.errors && locals.errors.categoryId) { %>
                  <span class="text-danger" id="errors-categoryId">
                    <%= errors.categoryId.msg %>
                  </span>
                  <% } %>
              </div>

              <label for="brand" class="col-sm-2 col-form-label">Brand:</label>
              <div class="col-sm-10">
                <input type="text" name="brand" class="form-control" id="brand">
                <% if (locals.errors && locals.errors.brand) { %>
                  <span class="text-danger" id="errors-brand">
                    <%= errors.brand.msg %>
                  </span>
                  <% } %>
              </div>

              <label for="color" class="col-sm-2 col-form-label">Color:</label>
              <div class="col-sm-10">
                <input type="text" name="color" class="form-control" id="brand">
                <% if (locals.errors && locals.errors.color) { %>
                  <span class="text-danger" id="errors-color" >
                    <%= errors.color.msg %>
                  </span>
                  <% } %>
              </div>


              <label for="image" class="col-sm-2 col-form-label">Image:</label>
              <div class="col-sm-10">
                <input type="file" multiple name="image" class="form-control" id="imageInput"
                  onchange="previewImages(event)">
                <div id="imagePreviews" class="mt-2 image-container"></div>
                <% if (locals.errors && locals.errors.image) { %>
                  <span class="text-danger image-upload" id="errors-image" >
                    <%= errors.image.msg %>
                  </span>
                  <% } %>
                    <div id="imageError" class="text-danger mt-2"></div>
              </div>



              <label for="retail_price" class="col-sm-2 col-form-label">Price:</label>
              <div class="col-sm-10">
                <input type="number" name="price" class="form-control" id="retailPrice" onchange="validatePrice()">
                <span id="priceError" class="text-danger"></span>
                <% if (locals.errors && locals.errors.price) { %>
                  <span class="text-danger" id="errors-price" >
                    <%= errors.price.msg %>
                  </span>
                  <% } %>
              </div>

              <label for="discount" class="col-sm-2 col-form-label">Stock:</label>
              <div class="col-sm-10">
                <input type="text" name="stock" class="form-control" id="stock" onchange="validateStock()">
                <span id="stockError" class="text-danger"></span>
                <% if (locals.errors && locals.errors.stock) { %>
                  <span class="text-danger" id="errors-stock" >
                    <%= errors.stock.msg %>
                  </span>
                  <% } %>
              </div>

              <label for="product_description" class="col-sm-2 col-form-label">Description:</label>
              <div class="col-sm-10">
                <input type="text" name="description" class="form-control id=" description">
                <% if (locals.errors && locals.errors.description) { %>
                  <span class="text-danger" id="errors-description" >
                    <%= errors.description.msg %>
                  </span>
                  <% } %>
              </div>
            </div>
            <center>
              <button type="submit" class="text-center mt-4 btn btn-success">Submit</button>
            </center>

          </form>

          <a href="/admin/products">Back to products View</a>


    </div>
    </div>
    </div>


    <script>
      function displayImage(event) {
        document.getElementById(viewImage).src = URL.createObjectURL(event.files[0]);
      }
    </script>


    <style>
      .image-container {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
      }

      .image-container img {
        max-width: 100px;
        max-height: 100px;
      }

      .delete-button {
        margin-left: 10px;
      }
    </style>

    <script>
      function previewImages(event) {
        const imagePreviews = document.getElementById("imagePreviews");
        const imageError = document.getElementById("imageError");
        imageError.innerHTML = ""; // Clear previous error messages
        imagePreviews.innerHTML = "";

        const allowedTypes = ["image/png", "image/jpeg", "image/jpg"];

        const files = [];

        for (let i = 0; i < event.target.files.length; i++) {
          const file = event.target.files[i];

          // Check if the file type is allowed
          if (!allowedTypes.includes(file.type)) {
            imageError.innerHTML = "Please select only PNG or JPG images.";
            event.target.value = ""; // Clear the file input
            return;
          }

          if (file) {
            files.push(file);

            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);

            const deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.innerText = "Delete";
            deleteButton.className = "btn btn-danger btn-sm delete-button";

            deleteButton.onclick = function () {
              const index = Array.from(imagePreviews.children).indexOf(imageContainer);
              files.splice(index, 1); // Remove the file from the array
              imagePreviews.removeChild(imageContainer);
              updateFileInput(); // Update the file input
            };

            const imageContainer = document.createElement("div");
            imageContainer.className = "image-container";
            imageContainer.appendChild(img);
            imageContainer.appendChild(deleteButton);
            imagePreviews.appendChild(imageContainer);
          }
        }

        // Update the file input with the remaining files
        function updateFileInput() {
          const newFileList = new DataTransfer();
          files.forEach((file) => newFileList.items.add(file));
          event.target.files = newFileList.files;
        }
      }
    </script>

    <script>
      function validatePrice() {
        const priceInput = document.getElementById('retailPrice');
        const priceError = document.getElementById('priceError');

        // Check if the price is negative
        if (parseFloat(priceInput.value) < 0) {
          priceError.innerText = 'Price cannot be negative.';
          priceInput.setCustomValidity('Price cannot be negative.');

        } else {
          priceError.innerText = '';
          priceInput.setCustomValidity('');
        }
      }
    </script>

<script>
  function validateStock() {
    const stockInput = document.getElementById('stock');
    const stockError = document.getElementById('stockError');

    // Check if the price is negative
    if (parseFloat(stockInput.value) < 0) {
      stockError.innerText = 'Stock cannot be negative.';
      stockInput.setCustomValidity('Stock cannot be negative.');

    } else {
      stockError.innerText = '';
      stockInput.setCustomValidity('');
    }
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get all input elements
    const inputElements = document.querySelectorAll('input');

    // Add event listener for the 'focus' event on each input element
    inputElements.forEach(function (input) {
      input.addEventListener('focus', function () {
        const fieldName = input.name;
        const errorElement = document.querySelector(`#errors-${fieldName}`);

        // Clear the error message when the input field gains focus
        if (errorElement) {
          errorElement.innerText = '';
        }
      });
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get the category select element
    const categorySelect = document.getElementById('categoryId');

    // Get the error message element for the categoryId
    const errorElement = document.getElementById('errors-categoryId');

    // Add event listener for the 'change' event on the category select element
    categorySelect.addEventListener('change', function () {
      // Clear the error message when the category select value changes
      if (errorElement) {
        errorElement.innerText = '';
      }
    });
  });
</script>






    <%- include('layout/footerAdmin') %>